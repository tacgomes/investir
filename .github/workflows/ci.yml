name: CI

on:
  - push
  - pull_request

jobs:
  lint_and_test:
    name: Lint and test
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install investir package and optional dependencies
        run: |
          python -m pip install --editable .[lint,test]

      - name: Run linter
        run: |
          ruff check

      - name: Run style checker
        run: |
          ruff format --check

      - name: Run type checker
        run: |
          mypy --non-interactive --install-types .

      - name: Run unit tests
        run: |
          pytest
        env:
          COVERAGE_FILE: .coverage.${{ matrix.os }}-py${{ matrix.python-version }}

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          name: coverage-${{ matrix.os }}-py${{ matrix.python-version }}
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: ignore

  coverage:
    name: Coverage
    needs: lint_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install coverage package
        run: |
          python -m pip install coverage[toml]

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: coverage
          merge-multiple: true

      - name: Combine coverage data
        run: |
          python -m coverage combine coverage

      - name: Show a combined coverage report
        run: |
          python -m coverage report

      - name: Upload coverage data to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
